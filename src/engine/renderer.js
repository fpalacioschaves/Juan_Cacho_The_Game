// src/engine/renderer.js
export class Renderer{constructor(canvas,assets,overlay){this.canvas=canvas;this.ctx=canvas.getContext('2d');this.overlay=overlay||document.getElementById('overlayCanvas');this.octx=this.overlay?.getContext('2d')||null;this.assets=assets;if(!this.ctx){alert('Canvas 2D no soportado');return}this.fitToContainer()}fitToContainer(){const parent=this.canvas.parentElement||document.body;const maxW=Math.min(parent.clientWidth||960,960);const w=Math.max(320, maxW);const h=Math.round(w*9/16);this.canvas.width=w;this.canvas.height=h;if(this.overlay){this.overlay.width=w;this.overlay.height=h}}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}clearOverlay(){if(this.octx)this.octx.clearRect(0,0,this.overlay.width,this.overlay.height)}drawImage(key){const img=this.assets.get(key);if(!img){console.warn('drawImage: asset no encontrado',key);return}this.ctx.drawImage(img,0,0,this.canvas.width,this.canvas.height)}drawHotspotRect(h){const ctx=this.octx||this.ctx;ctx.save();ctx.lineWidth=3;ctx.strokeStyle='rgba(255,255,0,.9)';ctx.strokeRect(h.x,h.y,h.w,h.h);ctx.restore()}toLocalCoords(evt){const r=this.canvas.getBoundingClientRect();const x=(evt.clientX-r.left)*(this.canvas.width/r.width);const y=(evt.clientY-r.top)*(this.canvas.height/r.height);return{x,y}}}